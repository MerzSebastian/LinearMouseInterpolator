version: 2.1

jobs:
  build-recorder:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run:
          name: "Upgrade pip & Install requirements"
          shell: powershell.exe
          command: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: "Compile windows executable"
          shell: powershell.exe
          command: |
            pyinstaller win32api-record-coordinates.py --onefile
      - persist_to_workspace:
          root: ./
          paths:
            - src/dist/
  compile-arduino:
    docker:
      - image: ubuntu:20.04
    steps:
      - checkout
      - run:
          name: Install arduino-cli
          command: |
            apt update
            apt install -y curl
            curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh
            export PATH=/root/project/bin
            export ARDUINO_BOARD_MANAGER_ADDITIONAL_URLS="https://www.pjrc.com/teensy/td_156/package_teensy_index.json"
            arduino-cli core update-index
            arduino-cli core install teensy:avr
      - run:
          name: compile
          command: |
            export PATH=$PATH:/root/project/bin
            arduino-cli compile -b teensy:avr:teensy41:usb=serialhid --output-dir /root/project/binaries arduino-lmi
      - persist_to_workspace:
          root: .
          paths: binaries
  release:
    docker:
      - image: ubuntu:20.04
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: install github cli + zip
          command: |
            apt update
            apt install -y curl
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
            && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
            && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
            && apt update \
            && apt install gh zip -y
      - run:
          name: zip it and ship it
          command: |
            export NEW_VERSION=$(grep -oP '\[[0-9]\.[0-9]\.[0-9]\](?![\s\S]*\[[0-9]\.[0-9]\.[0-9]\])' CHANGELOG.md | tail -c +2 | head -c -2)
            if [[ $(curl -s -w "%{http_code}" https://github.com/MerzSebastian/LinearMouseInterpolator/releases/tag/${NEW_VERSION}) = "Not Found404" ]]
            then
              export NOTES=$(grep -ozP '(## \['${NEW_VERSION}'\])([\S\s]*?)(?=## \[)' CHANGELOG.md)
              echo $NOTES
              mkdir release && mv binaries/ release/ && mv src\dist\recorder.exe release/
              cd release && zip -r release.zip .
              gh release create ${NEW_VERSION} release.zip --notes "${NOTES}"
            fi

            
workflows:
  release:
    jobs:
      - build-recorder
      - compile-arduino
      - release:
          requires:
            - compile-arduino
            - build-recorder
